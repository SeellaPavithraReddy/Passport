// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PVMS_Project.Data;

#nullable disable

namespace PVMS_Project.Migrations
{
    [DbContext(typeof(PassportDBContext))]
    partial class PassportDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PVMS_Project.Models.ENTITIES.City", b =>
                {
                    b.Property<string>("Pincode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State_Id")
                        .HasColumnType("int");

                    b.HasKey("Pincode");

                    b.HasIndex("State_Id");

                    b.ToTable("City_6");
                });

            modelBuilder.Entity("PVMS_Project.Models.ENTITIES.Cost", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("Months")
                        .HasColumnType("int");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Cost_6");
                });

            modelBuilder.Entity("PVMS_Project.Models.ENTITIES.Passport", b =>
                {
                    b.Property<string>("Passport_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ApplicationCost")
                        .HasColumnType("int");

                    b.Property<string>("Booklet_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Expiry_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Issue_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_of_services")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Passport_id");

                    b.HasIndex("User_id");

                    b.ToTable("Passport_6");
                });

            modelBuilder.Entity("PVMS_Project.Models.ENTITIES.Register", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CitizenType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contactno")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HintAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HintQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("Contactno")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Register_6");
                });

            modelBuilder.Entity("PVMS_Project.Models.ENTITIES.State", b =>
                {
                    b.Property<int>("State_Id")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("State_Id");

                    b.ToTable("State_6");
                });

            modelBuilder.Entity("PVMS_Project.Models.ENTITIES.Visa", b =>
                {
                    b.Property<string>("VisaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfApplication")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PassportId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("RegistrationCost")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VisaId");

                    b.HasIndex("Occupation");

                    b.HasIndex("PassportId");

                    b.ToTable("Visa_6");
                });

            modelBuilder.Entity("PVMS_Project.Models.ENTITIES.VisaApplicationCost", b =>
                {
                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Occupation");

                    b.ToTable("VisaApplicationCost_6");
                });

            modelBuilder.Entity("PVMS_Project.Models.ENTITIES.City", b =>
                {
                    b.HasOne("PVMS_Project.Models.ENTITIES.State", "state")
                        .WithMany()
                        .HasForeignKey("State_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("state");
                });

            modelBuilder.Entity("PVMS_Project.Models.ENTITIES.Passport", b =>
                {
                    b.HasOne("PVMS_Project.Models.ENTITIES.Register", "register")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("register");
                });

            modelBuilder.Entity("PVMS_Project.Models.ENTITIES.Visa", b =>
                {
                    b.HasOne("PVMS_Project.Models.ENTITIES.VisaApplicationCost", "visaCost")
                        .WithMany()
                        .HasForeignKey("Occupation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PVMS_Project.Models.ENTITIES.Passport", "passport")
                        .WithMany()
                        .HasForeignKey("PassportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("passport");

                    b.Navigation("visaCost");
                });
#pragma warning restore 612, 618
        }
    }
}
